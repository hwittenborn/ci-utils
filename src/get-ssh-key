#!/usr/bin/bash
#
# Usage
# =====
# Expose all of the following environment variables to the script:
# - SSH_HOST:                  Specifies the host to obtain a key from. This should not contain any usernames, and should just be the IP/domain name.
# - SSH_EXPECTED_FINGERPRINT:  Specifies the expected fingerprint for the returned key (I.e. 'SHA256:blahblahsshfingerprint').
# - SSH_FILE:                  Specifies the output file to save the key to (defaults to "${HOME}/.ssh/known_hosts" if omitted). The output of the returned SSH fingerprints get appended to the end of this file.
# - SET_PERMS:                 Sets permissions to 600 for all files in SSH_FILE's directory after succesfully adding a fingerprint. Defaults to doing nothing if not set or equal to zero characters.
set -e
PATH="./:${PATH}" # REMOVE AT PACKAGING

bad_env=false

for i in "SSH_HOST" "SSH_EXPECTED_FINGERPRINT"; do
    if [[ "${!i:+x}" != "x" ]]; then
        ci-message error "Environment variable '${i}' isn't set."
        bad_env=true
    fi
done

if [[ "${bad_env}" == "true" ]]; then
    exit 1
fi

if [[ "${SSH_FILE:+x}" != "x" ]]; then
    SSH_FILE="${HOME}/.ssh/known_hosts"
fi

temp_file="$(mktemp)"

ci-message info "Obtaining SSH key..."
ssh-keyscan "${SSH_HOST}" > "${temp_file}"
echo "${temp_file}"

ci-message info "Verifying SSH fingerprints..."
ssh_fingerprint_hashtype="$(echo "${SSH_EXPECTED_FINGERPRINT}" | awk -F ':' '{print $1}')"

if ! ssh-keygen -lf "${temp_file}" -E "${ssh_fingerprint_hashtype}" | grep -q " ${SSH_EXPECTED_FINGERPRINT} ${SSH_HOST} "; then
    ci-message error "SSH fingerprint validation failed."
    exit 1
fi

ci-message info "SSH fingerprint validation succeded."
ssh_path="$(dirname "${SSH_FILE}")"

if ! [[ -d "${ssh_path}" ]]; then
    ci-message info "Creating directory '${ssh_path}'..."

    if ! mkdir -p "${ssh_path}"; then
        ci-message error "Failed to create directory."
        exit 1
    fi
fi

ci-message info "Appending new fingerprints to '${SSH_FILE}'..."

if ! cat "${temp_file}" >> "${SSH_FILE}"; then
    ci-message error "Failed to append fingerprints."
    exit 1
fi

if [[ "${SET_PERMS:+x}" == "x" ]]; then
    echo "Setting proper permissions for files in '${ssh_path}'..."
    find "${ssh_path}" -type f -exec chmod 600 '{}' \;
fi

ci-message info "Done."
exit 0
